[{"path":"https://rubenfcasal.github.io/baggingbwsel/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Barreiro-Ures. Author. Ruben Fernandez-Casal. Author, maintainer. Jeffrey Hart. Author. Ricardo Cao. Author. Mario Francisco-Fernandez. Author.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barreiro-Ures D, Fernandez-Casal R, Hart J, Cao R, Francisco-Fernandez M (2024). baggingbwsel: Bagging Bandwidth Selection Kernel Density Regression Estimation. R package version 1.1, https://github.com/rubenfcasal/baggingbwsel/, https://rubenfcasal.github.io/baggingbwsel/.","code":"@Manual{,   title = {baggingbwsel: Bagging Bandwidth Selection in Kernel Density and Regression Estimation},   author = {Daniel Barreiro-Ures and Ruben Fernandez-Casal and Jeffrey Hart and Ricardo Cao and Mario Francisco-Fernandez},   year = {2024},   note = {R package version 1.1, https://github.com/rubenfcasal/baggingbwsel/},   url = {https://rubenfcasal.github.io/baggingbwsel/}, }"},{"path":[]},{"path":"https://rubenfcasal.github.io/baggingbwsel/index.html","id":"version-11","dir":"","previous_headings":"","what":"Version 1.1","title":"Bagging Bandwidth Selection\n        in Kernel Density and Regression Estimation","text":"package implements bagging bandwidth selection methods Parzen-Rosenblatt kernel density estimator, Nadaraya-Watson local polynomial kernel regression estimators. bandwidth selectors can achieve greater statistical precision non-bagged counterparts computationally fast. See Barreiro-Ures et al. (2021a) Barreiro-Ures et al. (2021b).","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bagging Bandwidth Selection\n        in Kernel Density and Regression Estimation","text":"can install (compiled) released version CRAN : Alternatively, can install development version github : Note also , package requires compilation, Windows users need previously installed appropriate version Rtools, OS X users need installed Xcode.","code":"install.packages(\"baggingbwsel\") # install.packages(\"remotes\") remotes::install_github(\"rubenfcasal/baggingbwsel\")"},{"path":"https://rubenfcasal.github.io/baggingbwsel/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Bagging Bandwidth Selection\n        in Kernel Density and Regression Estimation","text":"Daniel Barreiro-Ures (daniel.barreiro.ures@udc.es) Ruben Fernandez-Casal (rubenfcasal@gmail.com) Jeffrey Hart Ricardo Cao Mario Francisco-Fernandez Maintainer: Ruben Fernandez-Casal (Dep. Mathematics, University Coruña, Spain). Please send comments, error reports suggestions rubenfcasal@gmail.com.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Bagging Bandwidth Selection\n        in Kernel Density and Regression Estimation","text":"Barreiro-Ures, D., Cao, R., Francisco-Fernández, M., & Hart, J. D. (2021a). Bagging cross-validated bandwidths application big data. Biometrika, 108(4), 981-988, . Barreiro-Ures, D., Cao, R., & Francisco-Fernández, M. (2021b). Bagging cross-validated bandwidth selection nonparametric regression estimation applications large-sized samples. arXiv preprint.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagcv.html","id":null,"dir":"Reference","previous_headings":"","what":"Bagged CV bandwidth selector for Parzen-Rosenblatt estimator — bagcv","title":"Bagged CV bandwidth selector for Parzen-Rosenblatt estimator — bagcv","text":"Bagged CV bandwidth selector Parzen-Rosenblatt estimator","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bagged CV bandwidth selector for Parzen-Rosenblatt estimator — bagcv","text":"","code":"bagcv(x, r, s, h0, h1, nb = r, ncores = parallel::detectCores())"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bagged CV bandwidth selector for Parzen-Rosenblatt estimator — bagcv","text":"x Vector. Sample. r Positive integer. Size subsamples. s Positive integer. Number subsamples. h0 Positive real number. Range minimize, left bound. h1 Positive real number. Range minimize, right bound. nb Positive integer. Number bins. ncores Positive integer. Number cores parallelize computations.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagcv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bagged CV bandwidth selector for Parzen-Rosenblatt estimator — bagcv","text":"Bagged CV bandwidth.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagcv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bagged CV bandwidth selector for Parzen-Rosenblatt estimator — bagcv","text":"Bagged cross-validation bandwidth selector Parzen-Rosenblatt estimator.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagcv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bagged CV bandwidth selector for Parzen-Rosenblatt estimator — bagcv","text":"","code":"set.seed(1) x <- rnorm(10^6) bagcv(x, 5000, 100, 0.01, 1, 1000, 2) #> [1] 0.06387559"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/baggingbwsel-package.html","id":null,"dir":"Reference","previous_headings":"","what":"baggingbwsel: Bagging bandwidth selection in kernel density and \r\nregression estimation — baggingbwsel-package","title":"baggingbwsel: Bagging bandwidth selection in kernel density and \r\nregression estimation — baggingbwsel-package","text":"package implements bagging bandwidth selection methods  Parzen-Rosenblatt kernel density estimator, Nadaraya-Watson  local polynomial kernel regression estimators.  bandwidth selectors can achieve greater statistical precision  non-bagged counterparts computationally fast.  See Barreiro-Ures et al. (2021a) Barreiro-Ures et al. (2021b).","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/baggingbwsel-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"baggingbwsel: Bagging bandwidth selection in kernel density and \r\nregression estimation — baggingbwsel-package","text":"Barreiro-Ures, D., Cao, R., Francisco-Fernández, M., & Hart, J. D. (2021a).  Bagging cross-validated bandwidths application big data.  Biometrika, 108(4), 981-988, doi:10.1093/biomet/asaa092 . Barreiro-Ures, D., Cao, R., & Francisco-Fernández, M. (2021b).   Bagging cross-validated bandwidth selection nonparametric regression  estimation applications large-sized samples. arXiv preprint, doi:10.48550/arXiv.2105.04134 .","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/baggingbwsel-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"baggingbwsel: Bagging bandwidth selection in kernel density and \r\nregression estimation — baggingbwsel-package","text":"Maintainer: Ruben Fernandez-Casal rubenfcasal@gmail.com Authors: Daniel Barreiro-Ures daniel.barreiro.ures@udc.es Jeffrey Hart Ricardo Cao Mario Francisco-Fernandez","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Bagged CV bandwidth selector for local polynomial kernel regression. — bagreg","title":"Bagged CV bandwidth selector for local polynomial kernel regression. — bagreg","text":"Bagged CV bandwidth selector local polynomial kernel regression.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bagged CV bandwidth selector for local polynomial kernel regression. — bagreg","text":"","code":"bagreg(   x,   y,   r,   s,   h0,   h1,   nb = r,   ncores = parallel::detectCores(),   poly.index = 0 )"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bagged CV bandwidth selector for local polynomial kernel regression. — bagreg","text":"x Covariate vector. y Response vector. r Positive integer. Size subsamples. s Positive integer. Number subsamples. h0 Positive real number. Range minimize, left bound. h1 Positive real number. Range minimize, right bound. nb Positive integer. Number bins use cross-validation. ncores Positive integer. Number cores parallelize computations. poly.index Non-negative integer defining local constant (0) local  linear (1) smoothing. Default value: 0 (Nadaraya-Watson estimator).","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bagged CV bandwidth selector for local polynomial kernel regression. — bagreg","text":"Bagged CV bandwidth.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bagged CV bandwidth selector for local polynomial kernel regression. — bagreg","text":"Bagged cross-validation bandwidth selector local polynomial kernel regression.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/bagreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bagged CV bandwidth selector for local polynomial kernel regression. — bagreg","text":"","code":"set.seed(1) x <- rnorm(10^5) y <- 2*x+rnorm(1e5,0,0.5) bagreg(x, y, 1000, 10, 0.01, 1, 1000, 2) #> [1] 0.04751349"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hboot_bag.html","id":null,"dir":"Reference","previous_headings":"","what":"Bagging bootstrap bandwidth selector for Parzen-Rosenblatt estimator — hboot_bag","title":"Bagging bootstrap bandwidth selector for Parzen-Rosenblatt estimator — hboot_bag","text":"Bagging bootstrap bandwidth selector Parzen-Rosenblatt estimator","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hboot_bag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bagging bootstrap bandwidth selector for Parzen-Rosenblatt estimator — hboot_bag","text":"","code":"hboot_bag(   x,   m = n,   N = 1,   nb = 1000L,   g,   lower,   upper,   ncores = parallel::detectCores(logical = FALSE) )"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hboot_bag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bagging bootstrap bandwidth selector for Parzen-Rosenblatt estimator — hboot_bag","text":"x Vector. Sample. m Positive integer. Size subsamples. N Positive integer. Number subsamples. nb Positive integer. Number bins. g Positive real number. Pilot bandwidth. lower Positive real number. Range minimize, left bound. upper Positive real number. Range minimize, right bound. ncores Positive integer. Number cores parallelize computations.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hboot_bag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bagging bootstrap bandwidth selector for Parzen-Rosenblatt estimator — hboot_bag","text":"Bagged CV bandwidth.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hboot_bag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bagging bootstrap bandwidth selector for Parzen-Rosenblatt estimator — hboot_bag","text":"Bagging bootstrap bandwidth selector Parzen-Rosenblatt estimator.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hboot_bag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bagging bootstrap bandwidth selector for Parzen-Rosenblatt estimator — hboot_bag","text":"","code":"set.seed(1) x <- rnorm(10^5) hboot_bag(x, 5000, 10, 1000, lower=0.001, upper=1, ncores=2) #> [1] 0.1070447"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hsss_dens.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized bagging CV bandwidth selector for Parzen-Rosenblatt estimator — hsss_dens","title":"Generalized bagging CV bandwidth selector for Parzen-Rosenblatt estimator — hsss_dens","text":"Generalized bagging CV bandwidth selector Parzen-Rosenblatt estimator","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hsss_dens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized bagging CV bandwidth selector for Parzen-Rosenblatt estimator — hsss_dens","text":"","code":"hsss_dens(x, r, s, nb = r, h0, h1, ncores = parallel::detectCores())"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hsss_dens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized bagging CV bandwidth selector for Parzen-Rosenblatt estimator — hsss_dens","text":"x Vector. Sample. r Positive integer. Size subsamples. s Positive integer. Number subsamples. nb Positive integer. Number bins. h0 Positive real number. Range minimize, left bound. h1 Positive real number. Range minimize, right bound. ncores Positive integer. Number cores parallelize computations.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hsss_dens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized bagging CV bandwidth selector for Parzen-Rosenblatt estimator — hsss_dens","text":"Bagged CV bandwidth.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hsss_dens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized bagging CV bandwidth selector for Parzen-Rosenblatt estimator — hsss_dens","text":"Generalized bagging cross-validation bandwidth selector Parzen-Rosenblatt estimator.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/hsss_dens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized bagging CV bandwidth selector for Parzen-Rosenblatt estimator — hsss_dens","text":"","code":"set.seed(1) x <- rnorm(10^5) hsss_dens(x, 5000, 100, 1000, 0.001, 1, 2) #> (Intercept)  #>          NA"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/mopt.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the optimal subsample size for bagged CV bandwidth for Parzen-Rosenblatt estimator — mopt","title":"Estimation of the optimal subsample size for bagged CV bandwidth for Parzen-Rosenblatt estimator — mopt","text":"Estimation optimal subsample size bagged CV bandwidth Parzen-Rosenblatt estimator","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/mopt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the optimal subsample size for bagged CV bandwidth for Parzen-Rosenblatt estimator — mopt","text":"","code":"mopt(x, N, r = 1000, s = 100, ncores = parallel::detectCores())"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/mopt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the optimal subsample size for bagged CV bandwidth for Parzen-Rosenblatt estimator — mopt","text":"x Vector. Sample. N Positive integer. Number subsamples bagged bandwidth. r Positive integer. Size subsamples. s Positive integer. Number subsamples. ncores Positive integer. Number cores parallelize computations.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/mopt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the optimal subsample size for bagged CV bandwidth for Parzen-Rosenblatt estimator — mopt","text":"Estimate optimal subsample size.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/mopt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the optimal subsample size for bagged CV bandwidth for Parzen-Rosenblatt estimator — mopt","text":"Estimates optimal size subsamples bagged CV bandwidth selector Parzen-Rosenblatt estimator.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/mopt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the optimal subsample size for bagged CV bandwidth for Parzen-Rosenblatt estimator — mopt","text":"","code":"set.seed(1) x <- rt(10^5, 5) mopt(x, 500, 500, 10, 2) #> [1] 271"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/tss_dens.html","id":null,"dir":"Reference","previous_headings":"","what":"Second order bagging CV bandwidth selector for Parzen-Rosenblatt estimator — tss_dens","title":"Second order bagging CV bandwidth selector for Parzen-Rosenblatt estimator — tss_dens","text":"Second order bagging CV bandwidth selector Parzen-Rosenblatt estimator","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/tss_dens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second order bagging CV bandwidth selector for Parzen-Rosenblatt estimator — tss_dens","text":"","code":"tss_dens(x, r, s, h0, h1, nb = 1000, ncores = 1)"},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/tss_dens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second order bagging CV bandwidth selector for Parzen-Rosenblatt estimator — tss_dens","text":"x Vector. Sample. r Vector. two subsample sizes. s Positive integer. Number subsamples. h0 Positive real number. Range minimize, left bound. h1 Positive real number. Range minimize, right bound. nb Positive integer. Number bins. ncores Positive integer. Number cores parallelize computations.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/tss_dens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second order bagging CV bandwidth selector for Parzen-Rosenblatt estimator — tss_dens","text":"Second order bagging CV bandwidth.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/tss_dens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Second order bagging CV bandwidth selector for Parzen-Rosenblatt estimator — tss_dens","text":"Second order bagging cross-validation bandwidth selector Parzen-Rosenblatt estimator.","code":""},{"path":"https://rubenfcasal.github.io/baggingbwsel/reference/tss_dens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Second order bagging CV bandwidth selector for Parzen-Rosenblatt estimator — tss_dens","text":"","code":"set.seed(1) x <- rnorm(10^5) tss_dens(x, 5000, 10, 0.01, 1, 1000, 2) #> [1] 0.1037406"}]
